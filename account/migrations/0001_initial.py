# Generated by Django 2.1 on 2020-08-28 09:56

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('location', models.CharField(choices=[('서울중부경찰서', '서울중부경찰서'), ('서울종로경찰서', '서울종로경찰서'), ('서울남대문경찰서', '서울남대문경찰서'), ('서울서대문경찰서', '서울서대문경찰서'), ('서울혜화경찰서', '서울혜화경찰서'), ('서울용산경찰서', '서울용산경찰서'), ('서울성북경찰서', '서울성북경찰서'), ('서울동대문경찰서', '서울동대문경찰서'), ('서울마포경찰서', '서울마포경찰서'), ('서울영등포경찰서', '서울영등포경찰서'), ('서울성동경찰서', '서울성동경찰서'), ('서울동작경찰서', '서울동작경찰서'), ('서울광진경찰서', '서울광진경찰서'), ('서울서부경찰서', '서울서부경찰서'), ('서울강북경찰서', '서울강북경찰서'), ('서울금천경찰서', '서울금천경찰서'), ('서울중랑경찰서', '서울중랑경찰서'), ('서울강남경찰서', '서울강남경찰서'), ('서울관악경찰서', '서울관악경찰서'), ('서울강서경찰서', '서울강서경찰서'), ('서울강동경찰서', '서울강동경찰서'), ('서울종암경찰서', '서울종암경찰서'), ('서울구로경찰서', '서울구로경찰서'), ('서울서초경찰서', '서울서초경찰서'), ('서울양천경찰서', '서울양천경찰서'), ('서울송파경찰서', '서울송파경찰서'), ('서울노원경찰서', '서울노원경찰서'), ('서울방배경찰서', '서울방배경찰서'), ('서울은평경찰서', '서울은평경찰서'), ('서울도봉경찰서', '서울도봉경찰서'), ('서울수서경찰서', '서울수서경찰서')], max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
